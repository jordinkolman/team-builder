{"ast":null,"code":"import _slicedToArray from \"/home/jordinkolman/Documents/School/team-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jordinkolman/Documents/School/team-builder/src/App.js\";\nimport React, { useState } from 'react';\nimport MemberForm from './components/Form';\nimport { Header, Segment, Container } from 'semantic-ui-react';\nimport TeamCard from './components/TeamCard';\nimport './App.css';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        memberToEdit = _useState4[0],\n        setMemberToEdit = _useState4[1];\n\n  const editMember = member => {\n    const editIndex = list.indexOf(memberToEdit);\n    setList(list.map((user, index) => {\n      if (index === editIndex) {\n        return member;\n      } else {\n        return user;\n      }\n    }));\n  };\n\n  return React.createElement(Container, {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(MemberForm, {\n    list: list,\n    setList: setList,\n    memberToEdit: memberToEdit,\n    setMemberToEdit: setMemberToEdit,\n    editMember: editMember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), list.map((user, index) => {\n    return React.createElement(TeamCard, {\n      key: index,\n      user: user,\n      setMemberToEdit: setMemberToEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jordinkolman/Documents/School/team-builder/src/App.js"],"names":["React","useState","MemberForm","Header","Segment","Container","TeamCard","App","list","setList","memberToEdit","setMemberToEdit","editMember","member","editIndex","indexOf","map","user","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,mBAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWN,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACNO,IADM;AAAA,QACAC,OADA;;AAAA,qBAE2BR,QAAQ,CAAC,IAAD,CAFnC;AAAA;AAAA,QAENS,YAFM;AAAA,QAEQC,eAFR;;AAIb,QAAMC,UAAU,GAAGC,MAAM,IAAI;AAC3B,UAAMC,SAAS,GAAGN,IAAI,CAACO,OAAL,CAAaL,YAAb,CAAlB;AACAD,IAAAA,OAAO,CACLD,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,UAAIA,KAAK,KAAKJ,SAAd,EAAyB;AACvB,eAAOD,MAAP;AACD,OAFD,MAEO;AACL,eAAOI,IAAP;AACD;AACF,KAND,CADK,CAAP;AASD,GAXD;;AAYA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAET,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,eAAe,EAAEC,eAJnB;AAKE,IAAA,UAAU,EAAEC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGJ,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAED,IAA5B;AAAkC,MAAA,eAAe,EAAEN,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CARH,CADF;AAgBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport MemberForm from './components/Form'\nimport { Header, Segment, Container } from 'semantic-ui-react'\nimport TeamCard from './components/TeamCard'\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([])\n  const [memberToEdit, setMemberToEdit] = useState(null)\n\n  const editMember = member => {\n    const editIndex = list.indexOf(memberToEdit)\n    setList(\n      list.map((user, index) => {\n        if (index === editIndex) {\n          return member\n        } else {\n          return user\n        }\n      })\n    )\n  }\n  return (\n    <Container className=\"App\">\n      <MemberForm \n        list={list}\n        setList={setList}\n        memberToEdit={memberToEdit}\n        setMemberToEdit={setMemberToEdit}\n        editMember={editMember}   \n      />\n      {list.map((user, index) => {\n        return (\n          <TeamCard key={index} user={user} setMemberToEdit={setMemberToEdit} />\n        )\n      })}\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}